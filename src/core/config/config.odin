package config

import "core:os"
import "core:fmt"
import "core:strings"
import "../../utils/errors"
import "../../utils/logging"


// OST_Config_N:[2]string={
// 	"ENGINE_INIT",
// 	"ENGINE_LOGGING"	
// 	}

// OST_Config_V:[7]string={
// 	"true",
// 	"false",
// 	"on",
// 	"off",
// 	"none",
// 	"simple",
// 	"verbose",
// }


main ::proc()
{
	if (OST_CHECK_IF_CONFIG_FILE_EXISTS() == false )
	{
		OST_CREATE_CONFIG_FILE()
	}

	if( OST_FIND_CONFIG("ENGINE_INIT") == false) && (OST_FIND_CONFIG("ENGINE_LOGGING") == false)
	{
		OST_APPEND_CONFIG_NAME("ENGINE_INIT")
		OST_APPEND_CONFIG_NAME("ENGINE_LOGGING")
		
//todo currently working on assigning the value read from ostrich.config file to the engine.ost_engine.Initialized variable.
	}

}


ostrich_config_msg:= "#This file was generated by the Ostrich Database Engine\n#Do NOT modify this file unless you know what you are doing\n#For more information on the Ostrich Database Engine visit: https://github.com/SchoolyB/Ostrich\n\n\n\n"


OST_CHECK_IF_CONFIG_FILE_EXISTS ::proc() -> bool
{
	configExists:bool
  configPath,e := os.open("../bin")
  defer os.close(configPath)
	
  foundFiles, err := os.read_dir(configPath, -1)
  for file in foundFiles {
		if file.name == "ostrich.config"
		{
			configExists = true
		}
  }
	return configExists
}

//the config file will contain info like: has the initial user setup been done, engine settings, etc
OST_CREATE_CONFIG_FILE :: proc() -> bool
{
	configPath:= "../bin/ostrich.config"
	file,e:= os.open(configPath, os.O_CREATE, 0o666)
	os.close(file)
	if  e != 0
	{
			errors.throw_utilty_error(1, "Error creating config file", "OST_GENERATE_CONFIG")
			logging.log_utils_error("Error creating config file", "OST_GENERATE_CONFIG")
			return false
		}
		msg:= transmute([]u8)ostrich_config_msg
		os.open(configPath, os.O_APPEND | os.O_WRONLY, 0o666)
		defer os.close(file)
		writter,ok:= os.write(file,msg)
		if ok != 0
		{
			errors.throw_utilty_error(1, "Error writing to config file", "OST_GENERATE_CONFIG")
			logging.log_utils_error("Error writing to config file", "OST_GENERATE_CONFIG")
			return false
		}
	return true
}

//searches the config file for the passed in config then returns true or false
//c = config name, v= value 
OST_FIND_CONFIG:: proc(c:string)-> bool
{
	configFound:bool
	data,e:= os.read_entire_file("../bin/ostrich.config")
	
	content := string(data)
	lines := strings.split(content, "\n")
	defer delete(lines)

	for line, i in lines
	{
		if strings.contains(line, c) 
		{
			configFound=true
    }
    break	
	}
	return configFound
}



//add a new config to the list in the .config file
OST_APPEND_CONFIG_NAME::proc(c:string) -> int
{
	file,e:=os.open("../bin/ostrich.config", os.O_APPEND | os.O_WRONLY, 0o666)
	defer os.close(file)
	configExists:= OST_FIND_CONFIG(c)
	if configExists == true
	{
		fmt.printfln("Config alreaddy found in file")
		return 1
	}
	concat:=strings.concatenate([]string{c," : \n"})
	str:= transmute([]u8)concat
		writter,ee:= os.write(file, str)
	return 0
}



